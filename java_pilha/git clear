[33mcommit 69348abdf53f90b88881f8be745475e1daf0f431[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Gabrielle Andrade Da Silva <105249937+Gbiiandrad@users.noreply.github.com>
Date:   Mon Nov 21 20:47:31 2022 -0300

    projeto em Andamento

[1mdiff --git a/.classpath b/.classpath[m
[1mnew file mode 100644[m
[1mindex 0000000..cb2aa0c[m
[1m--- /dev/null[m
[1m+++ b/.classpath[m
[36m@@ -0,0 +1,10 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<classpath>[m
[32m+[m	[32m<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-18">[m
[32m+[m		[32m<attributes>[m
[32m+[m			[32m<attribute name="module" value="true"/>[m
[32m+[m		[32m</attributes>[m
[32m+[m	[32m</classpathentry>[m
[32m+[m	[32m<classpathentry kind="src" path="src"/>[m
[32m+[m	[32m<classpathentry kind="output" path="bin"/>[m
[32m+[m[32m</classpath>[m
[1mdiff --git a/.project b/.project[m
[1mnew file mode 100644[m
[1mindex 0000000..3aae1fe[m
[1m--- /dev/null[m
[1m+++ b/.project[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8"?>[m
[32m+[m[32m<projectDescription>[m
[32m+[m	[32m<name>java_pilha</name>[m
[32m+[m	[32m<comment></comment>[m
[32m+[m	[32m<projects>[m
[32m+[m	[32m</projects>[m
[32m+[m	[32m<buildSpec>[m
[32m+[m		[32m<buildCommand>[m
[32m+[m			[32m<name>org.eclipse.jdt.core.javabuilder</name>[m
[32m+[m			[32m<arguments>[m
[32m+[m			[32m</arguments>[m
[32m+[m		[32m</buildCommand>[m
[32m+[m	[32m</buildSpec>[m
[32m+[m	[32m<natures>[m
[32m+[m		[32m<nature>org.eclipse.jdt.core.javanature</nature>[m
[32m+[m	[32m</natures>[m
[32m+[m[32m</projectDescription>[m
[1mdiff --git a/.settings/org.eclipse.core.resources.prefs b/.settings/org.eclipse.core.resources.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..99f26c0[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.eclipse.core.resources.prefs[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32mencoding/<project>=UTF-8[m
[1mdiff --git a/.settings/org.eclipse.jdt.core.prefs b/.settings/org.eclipse.jdt.core.prefs[m
[1mnew file mode 100644[m
[1mindex 0000000..b635231[m
[1m--- /dev/null[m
[1m+++ b/.settings/org.eclipse.jdt.core.prefs[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32meclipse.preferences.version=1[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.targetPlatform=18[m
[32m+[m[32morg.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve[m
[32m+[m[32morg.eclipse.jdt.core.compiler.compliance=18[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.lineNumber=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.localVariable=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.debug.sourceFile=generate[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.assertIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.enumIdentifier=error[m
[32m+[m[32morg.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=warning[m
[32m+[m[32morg.eclipse.jdt.core.compiler.release=enabled[m
[32m+[m[32morg.eclipse.jdt.core.compiler.source=18[m
[1mdiff --git a/bin/java_pilha/Fluxo.class b/bin/java_pilha/Fluxo.class[m
[1mnew file mode 100644[m
[1mindex 0000000..adb7aa8[m
Binary files /dev/null and b/bin/java_pilha/Fluxo.class differ
[1mdiff --git a/bin/module-info.class b/bin/module-info.class[m
[1mnew file mode 100644[m
[1mindex 0000000..e28dfd8[m
Binary files /dev/null and b/bin/module-info.class differ
[1mdiff --git a/src/java_pilha/Fluxo.java b/src/java_pilha/Fluxo.java[m
[1mnew file mode 100644[m
[1mindex 0000000..36bcde8[m
[1m--- /dev/null[m
[1m+++ b/src/java_pilha/Fluxo.java[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mpackage java_pilha;[m
[32m+[m
[32m+[m[32mpublic class Fluxo {[m
[32m+[m
[32m+[m	[32mpublic static void main(String[] args) {[m
[32m+[m		[32mSystem.out.println("Ini do main");[m
[32m+[m		[32mmetodo1(); // so pode ser chamado apartir de uma referencia como o "static" por ex[m
[32m+[m		[32mSystem.out.println("Fim do main");[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate static void metodo1() {[m
[32m+[m		[32mSystem.out.println("Ini do metodo1");[m
[32m+[m		[32mmetodo2(); // so pode ser chamado apartir de uma referencia como o "static" por ex[m
[32m+[m		[32mSystem.out.println("Fim do metodo1");[m
[32m+[m	[32m}[m
[32m+[m[41m	[m
[32m+[m	[32mprivate static void metodo2() {[m
[32m+[m		[32mSystem.out.println("Ini do metodo2");[m
[32m+[m[41m		[m
[32m+[m		[32mfor(int i = 1; i <= 5; i++) {[m
[32m+[m			[32mSystem.out.println(i);[m
[32m+[m		[32m}[m
[32m+[m[41m		[m
[32m+[m		[32mSystem.out.println("Fim do metodo2");[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m}[m
[1mdiff --git a/src/module-info.java b/src/module-info.java[m
[1mnew file mode 100644[m
[1mindex 0000000..d5b4596[m
[1m--- /dev/null[m
[1m+++ b/src/module-info.java[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m/**[m
[32m+[m[32m *[m[41m [m
[32m+[m[32m */[m
[32m+[m[32m/**[m
[32m+[m[32m * @author gabi[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[32mmodule java_pilha {[m
[32m+[m[32m}[m
\ No newline at end of file[m
